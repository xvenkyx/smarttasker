version: "3.8"
services:
  user-service:
    container_name: user-service  # âœ… strongly recommend setting this
    build: ./user-service
    ports:
      - "5001:5001"
    expose:
      - "5001"
    env_file: .env
    depends_on:
      - mongo
    networks:
      - smarttasker-net

  task-service:
    build: ./task-service
    volumes:
      - ./task-service:/app
    ports:
      - "8000:8000"
    env_file: .env
    command: >
      sh -c "./wait_for_db.sh &&
            python manage.py migrate --noinput &&
            python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - postgres
      - kafka
    networks:
      - smarttasker-net

  notification-service:
    build: ./notification-service
    ports:
      - "9000:9000"
    env_file: .env
    depends_on:
      - kafka
    networks:
      - smarttasker-net

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - task-service
      - notification-service
    networks:
      - smarttasker-net

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    networks:
      - smarttasker-net

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - smarttasker-net

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: taskdb
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: taskpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smarttasker-net

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - smarttasker-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

    networks:
      - smarttasker-net


  kafka:
    image: confluentinc/cp-kafka:7.3.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - smarttasker-net

volumes:
  mongo_data:
  postgres_data:
  kafka_data:

    networks:
      - smarttasker-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - smarttasker-net




networks:
  smarttasker-net:
    driver: bridge
